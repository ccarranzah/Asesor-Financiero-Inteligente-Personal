name: Auto Build & Release with Timestamped Version

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      # Paso 1: Descargar el código fuente del repositorio
      - name: Checkout code
        uses: actions/checkout@v3

      # Paso 2: Configurar Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Paso 3: Iniciar sesión en Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Paso 4: Generar etiqueta de versión dinámica
      - name: Generate dynamic version tag
        id: versioning
        run: |
          timestamp=$(date +'%Y%m%d.%H%M')
          sha_short=$(git rev-parse --short HEAD)
          version="v0.${timestamp}-${sha_short}"
          echo "Generated version: $version"
          echo "new_tag=$version" >> $GITHUB_OUTPUT

      # Paso 5: Construir y publicar imagen en Docker Hub
      - name: Build and Push Docker image to Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/smart-finance-app:cache
          cache-to: type=inline
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/smart-finance-app:latest
            ${{ secrets.DOCKER_USERNAME }}/smart-finance-app:${{ steps.versioning.outputs.new_tag }}

      # Paso 6: Configurar Git
      - name: Configure Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      # Paso 7: Crear rama de release
      - name: Create release branch
        run: |
          git checkout -b release-${{ steps.versioning.outputs.new_tag }}
          git push origin release-${{ steps.versioning.outputs.new_tag }}

      # Paso 8: Crear GitHub Release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.versioning.outputs.new_tag }}
          name: Release ${{ steps.versioning.outputs.new_tag }}
          body: |
            🚀 Auto-release generado el ${{ steps.versioning.outputs.new_tag }}
            Imagen publicada en:
            `docker.io/${{ secrets.DOCKER_USERNAME }}/smart-finance-app:${{ steps.versioning.outputs.new_tag }}`
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}