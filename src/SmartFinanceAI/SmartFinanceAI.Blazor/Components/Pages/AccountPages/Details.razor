@page "/accounts/details"
@using Microsoft.EntityFrameworkCore
@using SmartFinanceAI.Blazor.Models
@inject IDbContextFactory<SmartFinanceAI.Blazor.Data.SmartFinanceAIAppContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>Account</h2>
    <hr />
    @if (account is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">AccountType</dt>
            <dd class="col-sm-10">@account.AccountType</dd>
            <dt class="col-sm-2">AccountAlias</dt>
            <dd class="col-sm-10">@account.AccountAlias</dd>
            <dt class="col-sm-2">AccountNumber</dt>
            <dd class="col-sm-10">@account.AccountNumber</dd>
            <dt class="col-sm-2">Balance</dt>
            <dd class="col-sm-10">@account.Balance</dd>
        </dl>
        <div>
            <a href="@($"/accounts/edit?id={account.Id}")">Edit</a> |
            <a href="@($"/accounts")">Back to List</a>
        </div>
    }
</div>

@code {
    private Account? account;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        account = await context.Account.FirstOrDefaultAsync(m => m.Id == Id);

        if (account is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
